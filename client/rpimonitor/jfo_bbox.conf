#
# Based on https://api.bbox.fr/doc/apirouter/#api-WAN-GetWANIPStats
# All api : https://mabbox.bytel.fr/api/v1/map
# with the help of https://www.home-assistant.io/integrations/bbox/
# and the help of https://github.com/HydrelioxGitHub/pybbox/tree/master/pybbox

# uptime : curl -s --ciphers "DEFAULT@SECLEVEL=1" --insecure "https://mabbox.bytel.fr:443/api/v1/device" | jq

web.status.4.name=BBox

dynamic.1.name=bbox_stats
dynamic.1.source=/bin/bash -c 'curl -s --ciphers "DEFAULT@SECLEVEL=1" --insecure "https://mabbox.bytel.fr:443/api/v1/wan/ip/stats" -m 5 --output /tmp.ram/bbox_wan_ip_stats.json ; curl -s --ciphers "DEFAULT@SECLEVEL=1" --insecure "https://mabbox.bytel.fr:443/api/v1/summary" -m 5 --output /tmp.ram/bbox_summary.json'
dynamic.1.regexp=(.*)
dynamic.1.postprocess=
dynamic.1.rrd=

dynamic.10.name=rx_bandwidth
dynamic.10.source=jq .[0].wan.ip.stats.rx.bandwidth /tmp.ram/bbox_wan_ip_stats.json
dynamic.10.regexp=(\d+)
dynamic.10.postprocess=$1*-1
dynamic.10.rrd=GAUGE

dynamic.11.name=tx_bandwidth
dynamic.11.source=jq .[0].wan.ip.stats.tx.bandwidth /tmp.ram/bbox_wan_ip_stats.json
dynamic.11.regexp=(\d+)
dynamic.11.postprocess=
dynamic.11.rrd=GAUGE

dynamic.12.name=rx_bytes
dynamic.12.source=jq .[0].wan.ip.stats.rx.bytes /tmp.ram/bbox_wan_ip_stats.json
dynamic.12.regexp=(\d+)
dynamic.12.postprocess=$1*-1
dynamic.12.rrd=GAUGE

dynamic.13.name=tx_bytes
dynamic.13.source=jq .[0].wan.ip.stats.tx.bytes /tmp.ram/bbox_wan_ip_stats.json
dynamic.13.regexp=(\d+)
dynamic.13.postprocess=
dynamic.13.rrd=GAUGE

dynamic.20.name=nbconnected
dynamic.20.source=jq .[].hosts[].hostname /tmp.ram/bbox_summary.json | wc -l
dynamic.20.regexp=(.*)
dynamic.20.postprocess=
dynamic.20.rrd=GAUGE

dynamic.21.name=connected
dynamic.21.source=jq -r .[].hosts[].hostname /tmp.ram/bbox_summary.json  | sort --ignore-case | tr '\n' ' '
dynamic.21.regexp=(.*)
dynamic.21.postprocess=
dynamic.21.rrd=

dynamic.22.name=bbox_status
dynamic.22.source=jq -r .[0].internet.state /tmp.ram/bbox_summary.json
dynamic.22.regexp=(.*)
dynamic.22.postprocess=
dynamic.22.rrd=GAUGE

web.status.4.content.1.name=BBox
web.status.4.content.1.icon=network.png
web.status.4.content.1.line.1="Status : " + Badge(data.bbox_status,"==-1","Error","danger")+" "+Badge(data.bbox_status,"==0","Stopped","default") + "" + Badge(data.bbox_status,"==1","Starting","primary") + "" + Badge(data.bbox_status,"==2","Running","success")
web.status.4.content.1.line.2="RX Bandwith : <b>" + KMG(Math.abs(data.rx_bandwidth)) + "/s</b>"
web.status.4.content.1.line.3="TX Bandwith : <b>" + KMG(Math.abs(data.tx_bandwidth)) + "/s</b>"
web.status.4.content.1.line.4="Data Sent: <b>"+KMG(data.tx_bytes)+"<i class='icon-arrow-up'></i></b> Received: <b>"+KMG(Math.abs(data.rx_bytes)) + "<i class='icon-arrow-down'></i></b>"
web.status.4.content.1.line.5="Devices connected : <b>" + data.nbconnected + "</b>" + ShowInfo('devices', 'Connected devices', data.connected)


web.statistics.5.name=BBox

web.statistics.5.content.1.name=Bandwidth
web.statistics.5.content.1.graph_options.tooltipOpts={ content: "<h4>%s</h4> Value: %y.0<br/>At: %x", dateFormat:"%y-%0m-%0d %H:%M" }
web.statistics.5.content.1.graph.1=tx_bandwidth
web.statistics.5.content.1.graph.2=rx_bandwidth
web.statistics.5.content.1.ds_graph_options.tx_bandwidth.label=Upload bandwidth (bytes)
web.statistics.5.content.1.ds_graph_options.tx_bandwidth.lines={ fill: true }
web.statistics.5.content.1.ds_graph_options.tx_bandwidth.color="#FF7777"
web.statistics.5.content.1.ds_graph_options.rx_bandwidth.label=Download bandwidth (bytes)
web.statistics.5.content.1.ds_graph_options.rx_bandwidth.lines={ fill: true }
web.statistics.5.content.1.ds_graph_options.rx_bandwidth.color="#77FF77"
web.statistics.5.content.1.graph_options.yaxis={ tickFormatter: function (v) { if (Math.abs(v) > 1048576) return (Math.round(v*10/1000/1000)/10) + " MiB/s" ; if (Math.abs(v) > 1024) return (Math.round(v*10/1000)/10) + " KiB/s" ; else return v + " B/s" }, }

web.statistics.5.content.2.name=Bytes
web.statistics.5.content.2.graph_options.tooltipOpts={ content: "<h4>%s</h4> Value: %y.0<br/>At: %x", dateFormat:"%y-%0m-%0d %H:%M" }
web.statistics.5.content.2.graph.1=tx_bytes
web.statistics.5.content.2.graph.2=rx_bytes
web.statistics.5.content.2.ds_graph_options.tx_bytes.label=Upload bytes
web.statistics.5.content.2.ds_graph_options.rx_bytes.label=Download bytes
web.statistics.5.content.2.graph_options.yaxis={ tickFormatter: function (v) { if (Math.abs(v) > 1048576) return (Math.round(v*10/1000/1000)/10) + " MB" ; if (Math.abs(v) > 1024) return (Math.round(v*10/1000)/10) + " KB" ; else return v + " B/s" }, }

web.statistics.5.content.3.name=Devices
web.statistics.5.content.3.graph_options.tooltipOpts={ content: "<h4>%s</h4> Value: %y.0<br/>At: %x", dateFormat:"%y-%0m-%0d %H:%M" }
web.statistics.5.content.3.graph.1=nbconnected
web.statistics.5.content.3.ds_graph_options.nbconnected.label=Nb connected

web.statistics.5.content.4.name=Status
web.statistics.5.content.4.graph_options.tooltipOpts={ content: "<h4>%s</h4> Value: %y.0<br/>At: %x", dateFormat:"%y-%0m-%0d %H:%M" }
web.statistics.5.content.4.graph.1=bbox_status
web.statistics.5.content.4.ds_graph_options.nbconnected.label=Box status
